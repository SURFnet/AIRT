$Id$
vim: syntax=pod

=pod

=head1 NAME

AIRT_EXPORT - CLI work horse for the AIRT export queue


=head1 SYNOPSIS

B<airt_export> [--help] [--noqueue] [--verbose]
[--result-id=I<ID>] [--result-code=I<CODE>] [--result-msg=I<MESSAGE>]
[--purge] [--maxhours=HOURS]


=head1 DESCRIPTION

The B<airt_export> command is used to start up an external task, requested
via the AIRT export queue. Although the program is intended to be used from
cron(8), it may without problems be called manually, as long as it is from
the correct user account, typically F<airtexport>.

The same command is used for three separate actions.

=over 4

=item B<To dispatch queued external tasks from the export queue>

This is the normal default behaviour of the B<airt_export> command when run
with no command line parameters. Typically the command is run from cron(8)
in this mode. The program picks up tasks from the queue that are ready to
run and dispatches them.

=item B<To signal the completion of an external task to the export queue>

This is the first alternate behaviour, triggered by the presence of the
I<--result-id> parameter (only). Additionally, the I<--result-code> and the
I<--result-msg> parameters may be present, but they have useful default
values. Typically the task wrapper scripts will end by running the command
in this mode. No other action is performed.

=item B<To purge the export queue of old tasks>

This is the second alternate behaviour, triggered by the presence of the
I<--purge> parameter. All expired export queue tasks are removed from the
queue. Typically, a cron(8) job runs the C<airt_export --purge> command a
few times per day. No other action is performed.

=back


=over 4

=item I<--help>

Shows the usage of the program on the command line.

=item I<--noqueue>

This is mostly a debugging option. All possible sanity checks are performed
as usual, but the AIRT database is never updated, and no background task is
ever spawned. Typically used in combination with I<--verbose>. Take notice
that you must have a runnable export queue entry before something will
happen at all. I<--noqueue> can be used both for queue dispatch simulation,
for task completion flagging simulation (with I<--result-id>), and for queue
purge simulation (with I<--purge>).

=item I<--verbose>

Generates verbose output on stdout while processing. Useful for testing.

=item I<--result-id=ID>

Attempts to signal to the export queue that task I<ID> has been ended. If
this task is unknown to the queue, has not been started yet, or has already
been completed, this leads to an error. The task ID was passed to the
wrapper script as the first parameter and should be returned unchanged via
the I<--result-id> option.

=item I<--result-code=CODE>

If I<--result-id> is given, the I<CODE> is assumed to be the formal result
code of the wrapper script. Please use one of the following codes:

=over 4

=item OK

Wrapper script ended successfully.

=item WARNING

Wrapper script ended successfully, but a special condition occurred and the
result needs to be examined in detail.

=item ERROR

Wrapper script ended unsuccesfully, and the error condition needs to be
examined.

=back

The AIRT export queue viewer may use these result codes for user interface
flagging, e.g., by using different colours for different codes. There is no
further semantic meaning attached to the codes.  If no result code is passed
to the B<airt_export> command, UNKNOWN will be assumed and sent to the
export queue.

=item I<--result-msg=MSG>

If I<--result-id> is given, the I<MSG> is assumed to be a brief (not more
than 60-80 characters) statement in plain text about the results of the
wrapper script. May be left out, but it is recommended in all cases,
expecially if I<--result-code> is WARNING or ERROR. If you want to include
spaces in the message, use B<--result-msg="this type of syntax">.

=item I<--purge>

Purges the export queue: all export queue tasks created longer than a
specific number of hours ago are removed from the queue. If
I<--maxhours=HOURS> is left out, the default maximum time to live from the
F<@ETCDIR@/exportqueue.cfg> file is used. Typically, a cron(8) job runs the
C<airt_export --purge> command a few times per day. No other action is
performed.

=item I<--maxhours=HOURS>

Specifies the number of hours an export queue item must have been in the
export queue before it may get purged. The default value for this option
comes from the F<@ETCDIR@/exportqueue.cfg> file.

=back

Normally, B<airt_export> is quiet on stdout. Output is returned on stdout
only when requested via --verbose, and on stderr in case of problems. Exit
code 0 means everything went OK, 1 means there was some unrecoverable
problem, which will have been reported on stderr. There are cases where exit
code 0 will come together with stderr output, for example when processing
more than one export queue entry and one of them cannot be spawned. A
standard cron(8) implementation will catch all these cases and mail them to
the user account that is assigned to the export queue task.


=head1 SECURITY

B<airt_export> is built using the philosophy of upgrading privileges when
required. Typically, the program is started as user F<airtexport>
(certainly not as user F<root> and neither as F<nobody>), and upgrades to
the required privilege level using sudo(8). However, the actual sudo(8)
commands are not used in the B<airt_export> executable script; they all are
inside the user-provided wrapper scripts in F<@AIRT_PHPLIBDIR@/exportqueue>.
This means that all security-sensitive operations are fully controlled by
the system administrator via the F<etc/sudoers> file and the wrappers.

Wrappers run fully detached from any AIRT process (they are made a Posix
session leader). Only F<@AIRT_PHPLIBDIR@/exportqueue/wrapper_*> executables are
eligible to be started from the export queue. The only interface between
AIRT and the wrapper script is the command line string. The first parameter
of the command line string is the task ID, assigned by AIRT, which the
wrapper script must use when returning the result code to AIRT. If this ID
is faked or hijacked, for which access to the F<airtexport> user is
required, the AIRT export queue may be sent a fake result. However, this
does not compromise the integrity of the rest of the queue or the running
task, and the problem will be noticed when the original task attempts to
register its result code.


=head1 WRAPPERS

Actual background tasks are under full control of the wrapper scripts in
F<@AIRT_PHPLIBDIR@/exportqueue>. A sample wrapper, F<wrapper_none>, is being
provided as a framework and reference. Each wrapper represents a specific
task, such as a network-wide nmap(1) run. Wrappers are written and set up
by the local system/application administrator, using site-specific
approaches to management and security. This may involve sudo(8) for
privilege upgrades/shifts.

Each wrapper is assumed to end with a call to B<airt_export> using the
I<--result-id=ID> option. The actual task ID is passed as the first
parameter to each wrapper script and needs to be passed to I<--result-id>
unchanged. If this call is not executed, the export queue entry will not be
formally terminated, and eventually gets purged.


=head1 AUTHOR

Tilburg University/Infolab <F<airt-dev@uvt.nl>>.


=head1 REPORTING BUGS

Please use the issue tracking system found at F<http://www.airt.nl/>. You
will need to create an account on the web site to get access.


=head1 COPYRIGHT AND LICENSE

Copyright (C) 2005 Tilburg University, The Netherlands.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version.


=head1 SEE ALSO

More information about AIRT can be found on its website, at
F<http://www.airt.nl/>.

Full documentation is available in F<@AIRT_DOCDIR@>.

AIRT man pages can be found by C<apropos airt>.

=cut
