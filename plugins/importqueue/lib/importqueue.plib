<?php
/* vim: syntax=php tabstop=3 shiftwidth=3
 *
 * AIRT: APPLICATION FOR INCIDENT RESPONSE TEAMS
 * Copyright (C) 2005   Tilburg University, The Netherlands

 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * importqueue.plib -- main library for the import queue ("import" command).
 * 
 * $Id$
 */

// Pull in the standard AIRT library.
require_once LIBDIR.'/airt.plib';


/* Produce info on stdout (when user asked for --help). */
function printUsage() {
   global $FILTERS;

   echo t('Incidence import program, part of the AIRT suite.')."\n";
   echo t('Copyright (C) 2005   Tilburg University, The Netherlands.')."\n";
   echo t(
'Usage: import [--filter <filter>] [--help] [--noqueue] [--verbose] [filename]'
     )."\n";
   echo t(
     'The program reads the import data from stdin if no filename is given.'
     )."\n";
   
   // Enumerate all registered filters.
   if (count($FILTERS)>0) {
      echo t('Available filters:');
      foreach ($FILTERS as $filter) {
         echo ' '.$filter;
      }
      echo "\n";
   }

}// printUsage


/* Actual import function, which presents the standardised XML to the AIRT
 * core.
 * $input      = Standard XML string to import.
 * $error      = String variable to write possible error msg to (pass by ref.).
 * $verbosity  = TRUE when verbose output is requested on stdout.
 * Returns 0 on success, 1 on failure ($error contains error message).
 */
function import($input,&$error,$verbosity=FALSE) {
  fwrite(STDOUT,$input);
  $error = t('Import not yet implemented.');
  return 1;
}// import

?>
