<?php
/* vim: syntax=php shiftwidth=3 tabstop=3
 * AIRT: APPLICATION FOR INCIDENT RESPONSE TEAMS
 * Copyright (C) 2004  Kees Leune <kees@uvt.nl>

 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * history.plib - History module for AIRT
 *
 * $Id$
 */
require_once LIBDIR.'/database.plib';

function addIncidentComment($comment, $incidentid="", $userid="", $conn="") {
   if ($incidentid=="") {
       $incidentid=$_SESSION["incidentid"];
   }
   if ($userid=="") {
       $userid=$_SESSION["userid"];
   }

   $res = db_query(sprintf("
      INSERT INTO incident_comments
      (id, incident, comment, added, addedby)
      VALUES
      (nextval('incident_comments_sequence'), %s, %s, CURRENT_TIMESTAMP, %s)",
         $incidentid,
         db_masq_null($comment),
         $userid))
  or die("Unable to execute query.");
}

/* deprecated */
function showIncidentHistory($incidentid="") {
   if ($incidentid=="") {
      $incidentid=$_SESSION["incidentid"];
   }

   # $conn = db_connect(DBDB, DBUSER, DBPASSWD)
   # or die ("Unable to connect to database.");

   $res = db_query(sprintf("
      SELECT comment, extract(epoch from added) as added, login
      FROM   incident_comments i, users u
      WHERE  incident = %s
      AND    i.addedby = u.id
      ORDER BY added",
         $_SESSION["incidentid"]))
   or die ("Unable to query database.");

   echo "<table cellpadding=3>";
   $count = 0;
   while ($row = db_fetch_next($res)) {
      printf("<tr bgcolor=%s><td>%s</td><td>%s</td><td>%s</td></tr>",
         ($count++%2==1) ? "#FFFFFF" : "#DDDDDD",
         Date("d-M-Y H:i:s", $row["added"]),
         $row["login"],
         $row["comment"]
       );
   }
   echo "</table>";
   # db_close($conn);
}

/* retrieve the history of an incidentid as an array of associative arrays.
 * Each entry in the main array contains a comment; each element in the
 * associative array contains the following keys: comment, added, login
 */
function getIncidentHistory($incidentid) {
   # $conn = db_connect(DBDB, DBUSER, DBPASSWD)
   # or die ("Unable to connect to database.");

   $res = db_query(sprintf("
      SELECT comment, extract(epoch from added) as added, login
      FROM   incident_comments i, users u
      WHERE  incident = %s
      AND    i.addedby = u.id
      ORDER BY added", $incidentid))
  or die ("Unable to query database.");

   $output = array();
   while ($row = db_fetch_next($res)) {
      array_push($output, $row);
   }
   # db_close($conn);
   return $output;
}

/* return an HTML formatted history of an incident */
function formatIncidentHistory($incidentid="") {
   if ($incidentid=="") {
      $incidentid=$_SESSION["incidentid"];
   }

   $history = getIncidentHistory($incidentid);

   $output = "<table cellpadding=\"3\">\n";
   $count = 0;
   foreach ($history as $i=>$data) {
      $output .= sprintf("<tr bgcolor=\"%s\">\n", ($count++%2==1) ? "#FFFFFF" : "#DDDDDD");
      $output .= sprintf("  <td>%s</td>\n", Date("d-M-Y H:i:s", $data["added"]));
      $output .= "  <td>$data[login]</td>\n";
      $output .= "  <td>$data[comment]</td>\n";
      $output .= "</tr>\n";
  }
  $output .= "</table>\n";

  return $output;
}

?>
