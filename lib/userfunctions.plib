<?php
/*
  AIRT: APPLICATION FOR INCIDENT RESPONSE TEAMS
  Copyright (C) 2004	Kees Leune <kees@uvt.nl>

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  
  userfunctions.plib - User defined functions. Most contain 
  - function custom_categorize($ip, $defaultcategory); 
        returns the category identifier
  - function search_info($ip, $hostname, $consituency); prints additional
    information about hostname
  
  The functions may set two session variables at their discretion
    $_SESSION["current_user"] = Full name of the user
    $_SESSION["current_ip"]   = IP address of the user
  
  $Id$
 */
require_once LIBDIR.'/airt.plib';
require_once LIBDIR.'/database.plib';
require_once LIBDIR.'/constituency.plib';
require_once LIBDIR.'/search.plib';



/** Custom categorization */
function custom_categorize($ip, $networkid)
{
    $networks = getNetworks();
    $category = $networkid;
    $match = false;

    // The catchall UvT-domain needs to be refined further
    if (in_array($networkid, array(1, 7, 8, 9, 10, 11)))
    {
         // find IP address in DUN database
         // DUN is HOSTNAME based. Translate our IP and strip off domain
         $data = explode(".",gethostbyaddr($ip));
         $hostname = strtoupper($data[0]);

         $fname = sprintf("%s/%s", CERTDIR, "dun.txt");
         $f = @fopen($fname, "r")
         or die("Unable to open DUN.");

         while (!feof($f))
         {
            $line = fgets($f, 255);
            if (trim($line) == "") continue;

            $data = explode("|", $line);
            if ($hostname == $data[2])
            {
                $faculteit = trim($data[1]);
                $match = true;
                break;
            }
         }
         fclose($f);
         if ($match)
         {
            switch ($faculteit)
            {
                case "FEW": 
                    $category = 7;
                    break;
                case "FRW": 
                    $category = 9;
                    break;
                case "FSW": 
                    $category = 10;
                    break;
                case "FLW": 
                    $category = 8;
                    break;
                default:
                    $category = 11;
            } // switch
        } // if match
    } // UvT-class
    return $category;
} // custom_categorize


function search_info($ip, $networkid)
{
    $constituencies = getConstituencies();
    $networks = getNetworks();
    $consid = $networks[$networkid]["constituency"];
    $label = $constituencies[$consid]["label"];
    switch ($label)
    {
        case "feb":
        case "frw":
        case "fsw":
        case "flw":
        case "uvt":
            search_info_uvt($ip, $networkid);
            break;
        case "breburg":
            search_info_breburg($ip, $networkid);
            break;
        case "essent";
            search_info_essent($ip, $networkid);
            break;
        default:
            search_info_extern($ip, $networkid);
            break;
    } // switch
} // search_info


/**
 * Essent users:
 * Print info about users and do a ldap lookup to find matching email address
 */
function search_info_essent($ip, $networkid) 
{
    // strip of domain
    $hostname = strtolower(
        ereg_replace("\.(kub|uvt)\.nl$", "", gethostbyaddr($ip))
    );

    $f = fopen(sprintf("%s/%s", CERTDIR, "essent.txt"), "r")
    or die ("Unable to open essent file");

    while (!feof($f))
    {
    	$line = trim(fgets($f, 255));
	if ($line=="") continue;

	if (ereg("^([a-z]+[0-9]+) ([0-9a-f:]+) ([^ ]+) ([^ ]+) +(.*)$",
		$line, $matches))
	{
	    $hostname_essent = $matches[1];
	    $mac      = $matches[2];
	    $anr      = $matches[3];
	    $regio    = $matches[4];
	    $naam     = $matches[5];

	    if ($hostname_essent == $hostname)
	    {
			$userinfo = 
"Hostname          : $hostname
MAC adres         : $mac
Administratienr   : $anr
Regio             : $regio
Naam              : $naam";
            $_SESSION["current_name"] = $naam;

			$ds = ldap_connect("ldap.uvt.nl")
			or die("Unable to connect to ldap server");

			$r = ldap_bind($ds);
	        $sr = @ldap_search($ds, 
	            "o=Universiteit van Tilburg, c=NL",
	            "(&(objectclass=person)(employeenumber=$anr))");

	        $ldapinfo = ldap_get_entries($ds, $sr);
	        for ($i=0; $i < $ldapinfo["count"]; $i++) {
		    	$class = $ldapinfo[$i]["organizationalstatus"][0];
	            $telnr = $ldapinfo[$i]["telephonenumber"][0];
	            $email = $ldapinfo[$i]["mail"][0];

				$_SESSION["current_email"] = $email;

	            if (ereg(" ([0-9]+)$", $telnr, $m))
	                $telnr = $m[1];
	            
		    	$userinfo .= "
Type              : $class
Mail              : $email";
				$_SESSION["current_email"] = $email;
				if ($class=="Staff") 
					$userinfo .= "
Internal phone    : $telnr";
	        }
                
		$_SESSION["current_info"] = $userinfo;
		echo "<PRE>$userinfo</PRE>";
	   } // if hostname match
	}  // if pattern match
    } // while
    echo "</PRE>";
    
    fclose($f);
} // search_info_essent


/** 
 * Find detailed information about internal user
 * Query IP adress in DUN. Find matching support unit, do a ph lookup for
 * phone number and room number and find additional information via LDAP
 */
function search_info_uvt($ip, $networkid)
{
    // strip of domain
    $hostname = strtoupper(
        ereg_replace("\.(kub|uvt)\.nl$", "", gethostbyaddr($ip))
    );
    $fname = sprintf("%s/%s", CERTDIR, "dun.txt");
    $f = @fopen($fname, "r")
    or die("Unable to open DUN.");

    while (!feof($f))
    {
        $line = fgets($f, 255);
        if (trim($line) == "") continue;

        $data = explode("|", $line);
        if ($hostname == $data[2])
        {
            $mac    = $data[0];
            $fac    = trim($data[1]);
            $omschr = $data[3];
            $gezien = $data[4];
            $outlet = $data[6];

            $info =  sprintf(
"MAC Address      %s
Dienst/Faculteit %s
Omschrijving     %s
Laatst gezien    %s
Outlet           %s", $mac, $fac, $omscr, $gezien, $outlet);
			$_SESSION["current_info"] = $info;
			echo <<<EOF
<h2>DUN output</h2>
<pre>
$info
</pre>
EOF;
            $_SESSION["current_name"] = $omschr;

            /* find room number */
            if (ereg("^([A-Z] [0-9]+)", $outlet, $matches))
                $roomno = $matches[1];
    
            /* get additional info from ldap */
            $ds = ldap_connect("ldap.uvt.nl")
            or die("Unable to connect to ldap server");
    
            $r = ldap_bind($ds);
    
            $f2 = fopen("http://drcservices.uvt.nl/telefoongids/namen.txt?", "r")
            or die("Unable to open phonebook");
    
    
            printf("<h2>Phone book matches</h2>");
            printf("<PRE>"); // XXX XXX
            while (!feof($f2)) 
            {
                $line = trim(fgets($f2, 255));
                if ($line == "") continue;
    
                if ($roomno != "" && ereg($roomno, $line, $m))
                {
                    printf("%s\n", $line);
                    flush();
    
                    if (ereg("^[0-9]+  ([^ ,]+)", $line, $m)) 
                    {
                        $name = $m[1];
    
                        $sr = @ldap_search($ds, 
                            "o=Universiteit van Tilburg, c=NL",
                            "(&(objectclass=person)(roomnumber=$roomno)(sn=$name*))");
    
                        $info = ldap_get_entries($ds, $sr);
                        for ($i=0; $i < $info["count"]; $i++)
                        {
                            $telnr = $info[$i]["telephonenumber"][0];
                            $email = $info[$i]["mail"][0];
    
                            if (ereg(" ([0-9]+)$", $telnr, $m))
                                $telnr = $m[1];
                            
                            echo "      <a href=\"mailto:$email\">$email</a>
                            \n";
                        }
                    } // lastname found
                } // roomno found
            } // while f2
            printf("</PRE>");
            fclose($f2);
        } // hostname match
    } // reading DUN
} // search_info_internal()


function search_info_breburg($ip, $networkid)
{
    $f = fopen(CERTDIR."/wonenbreburg.csv", "r")
    or die ("Unable to open essent file");

    while (!feof($f))
    {
    	$line = trim(fgets($f,160));
	if ($line=="") continue;
        $data = explode(",", $line);

        $ip1 = trim($data[8]); 
        $ip2 = trim($data[9]); 

        if ($ip1 == $ip || $ip2 == $ip)
        {
            $voornaam     = $data[0];
            $voorvoegsels = $data[1];
            $achternaam   = $data[2];
            $mac1         = $data[3];
            $mac2         = $data[4];
            $instelling   = $data[5];
            $host1        = gethostbyaddr($ip1);
            $anr          = eregi_replace("^s", "", $data[6]);
            $email        = $data[7];

			$_SESSION["current_email"] = $email;

            if ($ip2 == "") 
                $host2="";
            else 
                $host2 = gethostbyaddr($ip2);
            flush();

            $name = sprintf("%s%s%s",
                $voornaam, 
                ($voorvoegsels==""?" ":" $voorvoegsels "),
                $achternaam);
            $_SESSION["current_name"] = $name;
            echo <<<EOF
<PRE>
Naam              : $name
Instelling        : $instelling
Studentnummer     : $anr
Email             : $email
</PRE>
EOF;

echo <<<EOF
<PRE>
Aansluiting 1:
    MAC adres     : $mac1
    IP adres      : $ip1
    Host name     : $host1

Aansluiting 2:
    MAC adres     : $mac2
    IP adres      : $ip2
    Host name     : $host2
</PRE>
EOF;
        }
    } // while
    fclose($f);
}

function search_info_extern($ip, $networkid)
{
    $cmd1=escapeshellcmd("/usr/bin/whois $ip");
    $cmd2=escapeshellcmd("/usr/bin/dig -t ALL $ip");
    $cmd3=escapeshellcmd("/usr/bin/traceroute $ip");
    $cmd4=escapeshellcmd("/usr/bin/rblcheck $ip");

    echo "<h2>Whois</h2>";
    echo "<PRE>";
    system($cmd1); 
    echo"</PRE>";
    flush();

    echo "<h2>Dig</h2>";
    echo "<PRE>";
    system($cmd2);
    echo "</PRE>";
    flush();

    echo "<h2>RBL check</h2>";
    echo "<PRE>";
    system($cmd4);
    echo "</PRE>";
    flush();
    
    echo "<h2>Traceroute</h2>";
    echo "<PRE>";
    system($cmd3);
    echo "</PRE>";
    flush();

}

?>
