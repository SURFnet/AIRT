<?php
/*
 * AIRT: APPLICATION FOR INCIDENT RESPONSE TEAMS
 * Copyright (C) 2004	Kees Leune <kees@uvt.nl>

 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * 
 * userfunctions.plib - User defined functions. Most contain 
 * - function custom_categorize($ip, $defaultcategory); 
         returns the category identifier
 * - function search_info($ip, $hostname, $consituency); prints additional
 *   information about hostname
 * 
 * $Id$
 */
require_once '/etc/airt/airt.cfg';
require_once LIBDIR.'/airt.plib';
require_once LIBDIR.'/database.plib';
require_once LIBDIR.'/constituency.plib';
require_once LIBDIR.'/search.plib';



/** Custom categorization */
function custom_categorize($ip, $networkid)
{
    $networks = getNetworks();
    $category = $networks[$networkid]["constituency"];
    $match = false;

    // The catchall UvT-domain needs to be refined further
    if (in_array($networkid, array(0=>1, 1=>12, 2=>13, 3=>14, 4=>14, 5=>15)))
    {
         // find IP address in DUN database
         // DUN is HOSTNAME based. Translate our IP and strip off domain
         $data = explode(".",gethostbyaddr($ip));
         $hostname = strtoupper($data[0]);

         $fname = sprintf("%s/%s", CERTDIR, "dun.txt");
         $f = @fopen($fname, "r")
         or die("Unable to open DUN.");

         while (!feof($f))
         {
            $line = fgets($f);
            if (trim($line) == "") continue;

            $data = explode("|", $line);
            if ($hostname == $data[2])
            {
                $faculteit = trim($data[1]);
                $match = true;
                break;
            }
         }
         fclose($f);
         if ($match)
         {
            switch ($faculteit)
            {
                case "FEW": 
                    $category = 12;
                    break;
                case "FRW": 
                    $category = 13;
                    break;
                case "FSW": 
                    $category = 14;
                    break;
                case "FLW": 
                    $category = 15;
                    break;
                default:
                    $category = 1;
            } // switch
        } // if match
    } // UvT-class
    return $category;
} // custom_categorize


function search_info($ip, $networkid)
{
    $constituencies = getConstituencies();
    $networks = getNetworks();
    $consid = $networks[$networkid]["constituency"];
    $label = $constituencies[$consid]["label"];
    switch ($label)
    {
        case "feb":
        case "frw":
        case "fsw":
        case "flw":
        case "uvt":
            search_info_uvt($ip, $networkid);
            break;
        case "breburg":
            search_info_breburg($ip, $networkid);
            break;
        case "essent";
            search_info_essent($ip, $networkid);
            break;
        default:
            search_info_extern($ip, $networkid);
            break;
    } // switch
} // search_info


/**
 * Essent users:
 * Print info about users and do a ldap lookup to find matching email address
 */
function search_info_essent($ip, $networkid) 
{
    $hostname = ereg_replace("\.(kub|uvt)\.nl$", "", gethostbyaddr($hostname));

    $f = fopen(sprintf("%s/%s", CERTDATA, "essent.txt"), "r")
    or die ("Unable to open essent file");

    while (!feof($f))
    {
    	$line = trim(fgets($f));
	if ($line=="") continue;

	if (ereg("^([a-z]+[0-9]+) ([0-9a-f:]+) ([^ ]+) ([^ ]+) +(.*)$",
		$line, $matches))
	{
	    $hostname_essent = $matches[1];
	    $mac      = $matches[2];
	    $anr      = $matches[3];
	    $regio    = $matches[4];
	    $naam     = $matches[5];

	    if ($hostname_essent == $hostname)
	    {
		    echo <<<EOF
<PRE>	 
Hostname          : $hostname
MAC adres         : $mac
Administratienr   : $anr
Regio             : $regio
Naam              : $naam

EOF;
		$ds = ldap_connect("ldap.uvt.nl")
		or die("Unable to connect to ldap server");

		$r = ldap_bind($ds);
	        $sr = @ldap_search($ds, 
	            "o=Universiteit van Tilburg, c=NL",
	            "(&(objectclass=person)(employeenumber=$anr))");

	        $info = ldap_get_entries($ds, $sr);
	        for ($i=0; $i < $info["count"]; $i++)
	        {
		    $class = $info[$i]["organizationalstatus"][0];
	            $telnr = $info[$i]["telephonenumber"][0];
	            $email = $info[$i]["mail"][0];

	            if (ereg(" ([0-9]+)$", $telnr, $m))
	                $telnr = $m[1];
	            
		    echo <<<EOF
Type              : $class
Mail              : <a href="mailto:$email">$email</a>

EOF;
		  if ($class=="Staff") 
		  	echo "Internal phone    : $telnr";
	        }
                
	   } // if hostname match
	}  // if pattern match
    } // while
    
    fclose($f);
} // search_info_essent


/** 
 * Find detailed information about internal user
 * Query IP adress in DUN. Find matching support unit, do a ph lookup for
 * phone number and room number and find additional information via LDAP
 */
function search_info_uvt($ip, $networkid)
{
    // strip of domain
    $hostname = strtoupper(
        ereg_replace("\.(kub|uvt)\.nl$", "", gethostbyaddr($ip))
    );
    $fname = sprintf("%s/%s", CERTDIR, "dun.txt");
    $f = @fopen($fname, "r")
    or die("Unable to open DUN.");

    while (!feof($f))
    {
        $line = fgets($f);
        if (trim($line) == "") continue;

        $data = explode("|", $line);
        if ($hostname == $data[2])
        {
            $mac    = $data[0];
            $fac    = trim($data[1]);
            $omschr = $data[3];
            $gezien = $data[4];
            $outlet = $data[6];

            echo <<<EOF
<h2>DUN output</h2>
<pre>
MAC Address      $mac
Dienst/Faculteit $fac
Omschrijving     $omschr
Laatst gezien    $gezien
Outlet           $outlet
</pre>
EOF;

            /* find room number */
            if (ereg("^([A-Z] [0-9]+)", $outlet, $matches))
                $roomno = $matches[1];
    
            /* get additional info from ldap */
            $ds = ldap_connect("ldap.uvt.nl")
            or die("Unable to connect to ldap server");
    
            $r = ldap_bind($ds);
    
            $f2 = fopen("http://drcservices.uvt.nl/telefoongids/namen.txt?", "r")
            or die("Unable to open phonebook");
    
    
            printf("<h2>Phone book matches</h2>");
            printf("<PRE>"); // XXX XXX
            while (!feof($f2)) 
            {
                $line = trim(fgets($f2));
                if ($line == "") continue;
    
                if ($roomno != "" && ereg($roomno, $line, $m))
                {
                    printf("%s\n", $line);
                    flush();
    
                    if (ereg("^[0-9]+  ([^ ,]+)", $line, $m)) 
                    {
                        $name = $m[1];
    
                        $sr = @ldap_search($ds, 
                            "o=Universiteit van Tilburg, c=NL",
                            "(&(objectclass=person)(roomnumber=$roomno)(sn=$name*))");
    
                        $info = ldap_get_entries($ds, $sr);
                        for ($i=0; $i < $info["count"]; $i++)
                        {
                            $telnr = $info[$i]["telephonenumber"][0];
                            $email = $info[$i]["mail"][0];
    
                            if (ereg(" ([0-9]+)$", $telnr, $m))
                                $telnr = $m[1];
                            
                            echo "      <a href=\"mailto:$email\">$email</a>
                            \n";
                        }
                    } // lastname found
                } // roomno found
            } // while f2
            printf("</PRE>");
            fclose($f2);
        } // hostname match
    } // reading DUN
} // search_info_internal()


function search_info_extern($ip, $networkid)
{
    printf("Extern");
}

?>
