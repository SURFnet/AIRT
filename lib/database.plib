<?php
/* vim: syntax=php
 * $Id$ 
 * pgsql.plib - UvT-CERT postgres frontend

 * AIRT: APPLICATION FOR INCIDENT RESPONSE TEAMS
 * Copyright (C) 2004	Kees Leune <kees@uvt.nl>

 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

/* connect to the database on page load and remain connected.
 */
global $db;
$db = db_connect(DBDB, DBUSER, DBPASSWD);

/* return the latest error message */
function db_errormessage() {
    return pg_errormessage();
} // db_error


/* connect to the database server using the given database name, user name
 * and password, and return a connection resource.
 */
function db_connect($database, $username, $password) {
    $connectstring = sprintf("dbname=%s user=%s password=%s",
        $database, $username, $password);
    $conn = @pg_pconnect($connectstring, PGSQL_CONNECT_FORCE_NEW);

    return $conn;
} // db_connect


/* Execute $query on the database. Use default connection if none
 * is provided in $conn.
 */
function db_query($query, $conn=NULL) {
  global $db;

  if ($conn == NULL) {
    $conn = $db;
  }
  if (defined('DEBUG') && DEBUG) {
		printf("<PRE>$query</PRE>");
  }
  $res = @pg_query($conn, $query);

  return $res;
} // pg_query


/* Fetch the next result from a query output, using a result resource 
 * obtained by db_query
 */
function db_fetch_next($res) {
    return pg_fetch_assoc($res);
} // pg_fetch_next


/* Close specified database connection, or default when none
 * is provided
 */
function db_close($conn=NULL) {
  global $db;

  if ($conn == NULL) {
    $conn = $db;
  }
  return pg_close($conn);
}

/* Count the number of rows in the result set. */
function db_num_rows($res) {
    return pg_num_rows($res);
}


function db_free_result($res) {
    return pg_free_result($res);
}

/* Return $str surrounded by singles quotes, or the string NULL is $str is an
 * empty string
 */
function db_masq_null($str) {
    return ($str == "" ? "NULL": "'$str'");
}


?>
