<?php
/* vim:syntax=php shiftwidth=3 tabstop=3
 * $Id$ 

 * AIRT: APPLICATION FOR INCIDENT RESPONSE TEAMS
 * Copyright (C) 2004,2005	Kees Leune <kees@uvt.nl>

 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

// List of all AIRT error classes. The meaningful message strings are
// candidates to be translated using the t() function.
$AIRT_ERRORS = array(
   'DB_CONN'       => 'Unable to connect to database',
   'DB_QUERY'      => 'Unable to execute query',
   'PARAM_MISSING' => 'Missing parameter',
   'PARAM_FORMAT'  => 'Invalid parameter format',
   'ERR_FUNC'      => 'Error in function call'
);


// Central API to report error conditions.
// errClass  = Error class from the AIRT_ERRORS array.
// scope     = Place in the code where the error occurred, typically file
//             name and line number.
// user_info = Message to be shown to end user, should be meaningful for a
//             user but typically not contain information that is sensitive
//             or only of use to developers. Optional.
// sys_info  = Detailed information that will not be shown to the end user,
//             but may be very interesting for a developer (query text,
//             etc.). Optional. Should be sent to log file or such (TODO).
function airt_error($errClass, $scope, $user_info='', $sys_info='') {
   global $AIRT_ERRORS;

   if (array_key_exists($errClass, $AIRT_ERRORS)) {
      airt_msg(t('<div style="text-align:center; border-color:red; border-width:1px; border-style:solid; color:red">AIRT ERROR: %msg%info in scope %scope</div>', array(
                 '%msg'=>$AIRT_ERRORS[$errClass], 
                 '%scope'=>$scope,
                 '%info'=>($user_info=='' ? '' : "($user_info)")
      )));
   } else {
      airt_msg(t('AIRT Unknown error %errno: %info in scope %scope', array(
                 '%errno'=>$errClass, 
                 '%scope'=>$scope,
                 '%info'=>($user_info=='' ? '' : "($user_info)")
      )));
   }
}
?>
