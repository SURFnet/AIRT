<?php
/* vim: syntax=php shiftwidth=3 tabstop=3
 * AIRT: Application for Incident Response Teams
 * Copyright (C) 2006 Tilburg University, The Netherlands

 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * incident.plib - Incident management application logic
 *
 * $Id: incident.plib 1297 2008-10-19 02:17:38Z kees $
 */

require_once LIBDIR.'/database.plib';
/* corresponding database schema
 *
 *  create table mailbox (
 *      id    integer,      -- pull from generic_sequence
 *      messageid varchar,  -- Message-Id header
 *      sender    varchar,  -- From header (not envelope from)
 *      recipient varchar,  -- To header
 *      date      numeric,
 *      subject   varchar,  -- Subject header
 *      body      varchar,  -- Everything not header (no mime parsing yet)
 *      status    varchar,
 *      primary key (id)
 *  );
 */

/**
 * Fetch the contents of the mailbox
 *
 * @param &$mailbox associative array that will contain the mailbox
 * @param &$error error message, if any
 * @return true on success, false on failure
 */
function fetchMailbox(&$mailbox, &$error) {
   $mailbox = array();
   $error = '';
   $q = q('select id, messageid, sender, recipient, date, subject, body, '.
      'status from mailbox order by date asc');
   $res = db_query($q);
   if ($res === false) {
      $error = _('Database error in ').'mailqueue.plib:'.__LINE__;
      return false;
   }
   while (($row = db_fetch_next($res)) !== false) {
      $mailbox[$row['id']] = $row;
   }
   return true;
}

/**
 * Print the contents of the entire mailbox on screen
 */
function listMailbox(&$error='') {
   $error = '';
   $mailbox = array();
   if (fetchMailbox($mailbox, $error) === false) {
      return false;
   }
   pageHeader('Inbox');
   print '<form>'.LF;
   print '<table class="mailbox">'.LF;
   print '<tr>'.LF;
   print '<th>&nbsp;</th>'.LF;
   print '<th class="sender">'._('Sender').'</th>'.LF;
   print '<th class="subject">'._('Subject').'</th>'.LF;
   print '<th class="date">'._('Date').'</th>'.LF;
   print '</tr>'.LF;
   foreach ($mailbox as $msg) {
      print '<tr>'.LF;
      print '<td><input type="checkbox" name="mail['.$msg['id'].']"></td>'.LF;
      print '<td nowrap class="sender">';
      $out = $msg['sender'];
      if (strlen($out) > 35) {
         $out = substr($out, 0, 32).'...';
      }
      print htmlentities($out).'</td>'.LF;
      print '<td class="subject">'.
         htmlentities(substr($msg['subject'], 0, 50)).'</td>'.LF;
      print '<td class="date">'.
         substr(date('M d Y H:i', $msg['date']), 0, 19).'</td>'.LF;
      print '</tr>'.LF;
   }
   print '</table>'.LF;
   print '</form>'.LF;
   pageFooter();
}
?>
