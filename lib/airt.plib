<?php
/* vim:syntax=php
 * $Id$ 
 * airt.plib - UvT-CERT skeleton page

 * AIRT: APPLICATION FOR INCIDENT RESPONSE TEAMS
 * Copyright (C) 2004	Kees Leune <kees@uvt.nl>

 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
if (defined('CUSTOM_FUNCTIONS')) require_once CUSTOM_FUNCTIONS;

@session_start();

if (!isset($public) || !$public) {
    if (!array_key_exists("username", $_SESSION)) {
        Header("Location: login.php");
        exit;
    }

    if (!array_key_exists("userid", $_SESSION)) {
        Header("Location: login.php");
        exit;
    }

    if (!array_key_exists("ip", $_SESSION)) {
        Header("Location: login.php");
        exit;
    }

    if (!array_key_exists("last", $_SESSION)) {
        Header("Location: login.php");
        exit;
    }

    // check session ip
    if ($_SERVER["REMOTE_ADDR"] != $_SESSION["ip"]) {
        Header("Location: login.php");
        exit;
    }

    // check expiration
    $last = $_SESSION["last"];
    $now = time();

    if ($now - $last > SESSION_TIMEOUT) {
		printf("Your session has expired. Please ".
			"<a href=\"login.php\">log in again</a>.");
        exit;
    }

    // update session timestamp
    $_SESSION["last"] = $now;
}


/**
 * Display the page header
 * @in title The title of the page
 */
function pageheader($title="", $helptopic="") {
	global $public;

	generateEvent("pageHeader", array(
		"title"     => $title,
		"helptopic" => $helptopic
	));

} // pageheader()


/** 
 * Validate input provided by user
 * TODO: make this function do something
 */
function validate_input($input) {
	return $input;
}


/**
 * Display the page footer
 * @in pagefooter The footer of the page
 */
function pagefooter() {
    echo <<<EOF
</td>
</tr>
</table>
</body></html>
EOF;
} // pagefooter()


/**
 * Format an email addres
 */
function email($msg)
{
    printf("<a href=\"%s\">%s</a>", $msg, $msg);
}

/**
 */
function encode_incidentid($id) {
    return sprintf("%s%06d", INCIDENTID_PREFIX, $id);
}

function decode_incidentid($id) {
    $x = ereg_replace(INCIDENTID_PREFIX, "", $id);
    $x = ereg_replace("^0*", "", $x);
    return $x;
}

function normalize_incidentid($id) {
    $id = decode_incidentid($id);
    return encode_incidentid($id);
}


function choice($label, $value, $default) {
    if ($value == $default)
        return sprintf("<OPTION value='%s' SELECTED>%s</OPTION>\n",
            $value, $label);
    else
        return sprintf("<OPTION value='%s'>%s</OPTION>\n",
            $value, $label);
}


function registerEventHandler($event, $function) {
	global $glEventHandlers;

	if (!isset($glEventHandlers)) $glEventHandlers = array();

	if (array_key_exists($event, $glEventHandlers))
		array_push($glEventHandlers[$event], $function);
	else
		$glEventHandlers[$event] = array($function);
}

function generateEvent($event, $data=array()) {
	global $glEventHandlers;

	if (isset($glEventHandlers) &&
		 array_key_exists($event, $glEventHandlers)) {
		foreach ($glEventHandlers[$event] as $fun) 
			call_user_func($fun, $data);
	}
}
?>
