<?php
/* vim:syntax=php
 * AIRT: APPLICATION FOR INCIDENT RESPONSE TEAMS
 * Copyright (C) 2004	Kees Leune <kees@uvt.nl>

 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * 
 * search.plib - Search functions
 * 
 * $Id$
 */
require_once LIBDIR.'/airt.plib';
require_once LIBDIR.'/constituency.plib';

/* used by reversesortbymask-- do not call directly */
function netmaskcmp($a, $b) {
	$sizea = 1 + strrpos(decbin(ip2long($a["netmask"])), "1");
	$sizeb = 1 + strrpos(decbin(ip2long($b["netmask"])), "1");

	if ($sizea == $sizeb) return 0;
	else if ($sizea < $sizeb) return -1;
	else return 1;
}

/* sort the network list by reverse netmask */
function reversesortbymask ($networks) {
	usort($networks, "netmaskcmp");
	return $networks;
}

/* categorize IP address based on network */
function categorize($ip)
{
    $networks = reversesortbymask(getNetworks());
    $category = "-1";
    $longip   = ip2long($ip);

    foreach ($networks as $id => $data)
    {
        $network = ip2long($data["network"]);
        $netmask = ip2long($data["netmask"]);
        if (($longip & $netmask) == $network) $category = $id;
    }

    return $category;
} // categorize

?>
