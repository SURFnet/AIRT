<?php
/*
 * LIBERTY: INCIDENT RESPONSE SUPPORT FOR END-USERS
 * Copyright (C) 2004	Kees Leune <kees@uvt.nl>

 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * air.plib - Main application login
 *
 * $Id$
 */
require_once 'liberty.plib';
require_once 'database.plib';

/* Get an array describing all consituencies. The function will array 
 * containing one array for each consituency. Each constiuency array
 * has the following fields:
 * - $id
 * - $name
 * - $contact_email
 * - $contact_name
 * - $contact_phone
 */
function AIR_getConstituencies()
{
    $conn = db_connect(DBNAME, DBUSER, DBPASSWD)
    or die("Unable to connect to database.");

    $res = db_query($conn, "
        SELECT   * 
        FROM     constituencies 
        ORDER BY name")
    or die("Unable to query database.");

    $output = array(db_num_rows($res));
    $count = 0;
    while ($row = db_fetch_next($res))
        $output[$count++] = $row;
    db_close($conn);

    return $output;
} // AIR_getConstituencies


function AIR_getConstituencyById($id)
{
    $conn = db_connect(DBNAME, DBUSER, DBPASSWD)
    or die("Unable to connect to database.");

    $res = db_query($conn,
        "SELECT *
         FROM   constituencies
         WHERE  id=$id")
    or die("Unable to query database.");

    if (db_num_rows($next) == 0)
        $output = array();
    else        
        $output = db_fetch_next($res);
    }
    db_free_result($res);
    db_close($conn);

    return $output;
} AIR_getConstituencyById


class AIR_Constituency
{
    var $id,
        $name,
        $description,
        $contact_email,
        $contact_name,
        $contact_phone,
        $created,
        $createdby;

    function setId($id)            { $this->id = $id; }
    function setName($str)         { $this->name = $str; }
    function setDescription($str)  { $this->description = $str; }
    function setContactEmail($str) { $this->contact_email = $str; }
    function setContactPhone($str) { $this->contact_phone = $str; }
    function setCreated($str)      { $this->created = $str; }
    function setCreatedBy($id)     { $this->createdby = $id; }

    function getId()           { return $this->id; }
    function getName()         { return $this->name; }
    function getDescription()  { return $this->description; }
    function getContactEmail() { return $this->contact_email; }
    function getContactPhone() { return $this->contact_phone; }
    function getCreated()      { return $this->created; }
    function getCreatedBy()    { return $this->createdby; }

    function getInsertString() 
    {
        return sprintf("
            INSERT INTO constituencies
            (id, name, description, contact_email, contact_name,
             contact_phone, created, createdby)
            VALUES
            (nextval('constituencies_seq') , '%s', '%s', '%s', '%s', 
             '%s', '%s', %s)",
            $this->name,
            $this->description,
            $this->contact_email,
            $this->contact_name,
            $this->contact_phone,
            $this->created,
            $this->createdby);
    } // getInsertString()


} // Constituency
?>
