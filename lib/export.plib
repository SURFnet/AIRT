<?php
/* $Id$ 
 * vim: syntax=php shiftwidth=3 tabstop=3
 *
 * AIRT: APPLICATION FOR INCIDENT RESPONSE TEAMS
 * Copyright (C) 2004,2005	Tilburg University, The Netherlands

 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 */
require_once LIBDIR.'/airt.plib';
require_once LIBDIR.'/database.plib';

define('AIRTURL', 'http://infolab.uvt.nl/airt');
define('AIRTPREFIX','airt');

/* Export the incident id's listed in the array $ids in XML format.
 */
function exportIncident($ids) {
   $res_array = array();

   $expr = "(";
   foreach ($ids as $incident)
      $expr .= "$incident,";
      $expr = rtrim($expr, ",").")";

      // messageIdentification

      $query  = "SELECT lastname, firstname, email, phone FROM users WHERE id='".$_SESSION['userid']."'";
      if($_SESSION['userid']!=null) {
         $res = db_query($query)
            or die (_('Unable to query database.').' '._('error').' 200');


         while ($row = db_fetch_next($res)) {
            $res_array['messageIdentification']['sender_name'] = $row['firstname']." ".$row['lastname'];
            $res_array['messageIdentification']['email'] = $row['email'];
            $res_array['messageIdentification']['telephone'] = $row['phone'];
         }
      }
      $res_array['messageIdentification']['webservice_location'] = __FILE__;
      // ticketInformation
      #problems with left joins when selecting multiple users
      $query  = "
         SELECT    incidents.id,
                   incidents.created as created,
                   incident_states.label as state,
                   incident_status.label as status,
                   incident_types.label  as type,
                   users.firstname as firstname,
                   users.lastname as lastname
           FROM    incidents
           FULL JOIN incident_status ON (incident_status.id = incidents.status)
           FULL JOIN incident_states ON (incident_states.id = incidents.state)
           FULL JOIN incident_types ON (incident_types.id = incidents.type)
           FULL JOIN incident_users ON (incident_users.incidentid = incidents.id)
           FULL JOIN users ON (incident_users.userid = users.id)
          WHERE    incidents.id IN $expr
       ORDER BY    incidents.id";

      $res = db_query($query)
      or die(_('Unable to query database.').' '._('error').' 400');

      while ($row = db_fetch_next($res)) {
         $res_array[$row['id']]['ticketInformation']['ticketnumber']['reference'] = $row['id'];
         $res_array[$row['id']]['ticketInformation']['created'] = $row['created'];
         $res_array[$row['id']]['ticketInformation']['creator'] = $row['firstname']." ".$row['lastname'];
         $res_array[$row['id']]['ticketInformation']['state'] = $row['state'];
         $res_array[$row['id']]['ticketInformation']['status'] = $row['status'];
         $res_array[$row['id']]['ticketInformation']['type'] = $row['type'];
      }

      #history information
      $query  = "
         SELECT incident_comments.id,
                incident,
                comment,
                added,
                users.firstname as firstname,
                users.lastname as lastname
           FROM incident_comments, users
          WHERE incident IN $expr
            AND addedby = users.id
       ORDER BY incident_comments.id";

      $res = db_query($query)
         or die(_('Unable to query database.').' '._('error').' 600');

      while ($row = db_fetch_next($res)) {
         $res_array[$row['incident']]['ticketInformation']['history'][$row['id']]['ticket_updater'] = $row['firstname']." ".$row['lastname'];
         $res_array[$row['incident']]['ticketInformation']['history'][$row['id']]['ticket_update_time'] = $row['added'];
         $res_array[$row['incident']]['ticketInformation']['history'][$row['id']]['update_action'] = $row['comment'];
      }


      ####
      #technicalInformation
      ####
      $query  = "
         SELECT incident_addresses.id, incident, addressrole, 
                ip, hostname, added,
                addedby, constituencies.name as constituency,
                users.firstname as firstname,
                users.lastname as lastname
           FROM incident_addresses, constituencies, users
          WHERE incident IN $expr
            AND constituency = constituencies.id
            AND addedby = users.id
       ORDER BY incident
            ";
   $res = db_query($query)
      or die ("Unable to query database. error 800");

   while ($row = db_fetch_next($res)) {
      $res_array[$row['incident']]['technicalInformation'][$row['id']]['ip'] = $row['ip'];
      $res_array[$row['incident']]['technicalInformation'][$row['id']]['addressrole'] = $row['addressrole'];
      $res_array[$row['incident']]['technicalInformation'][$row['id']]['hostname'] = $row['hostname'];
      $res_array[$row['incident']]['technicalInformation'][$row['id']]['added'] = $row['added'];
      $res_array[$row['incident']]['technicalInformation'][$row['id']]['addedby'] = $row['firstname']." ".$row['lastname'];
      $res_array[$row['incident']]['technicalInformation'][$row['id']]['constituency'] = $row['constituency'];
   }

   $doc = new DOMDocument();
   BuildTree($doc, $res_array);
   return $doc->saveXML();
}


/* $doc contains a DOM tree to which the data in $row will be added. $row is
 * an associative array containing the output of the query which is executed
 * in exportIncident(). 
 * 
 * This function will determine if $row is a new incident, which is not yet
 * part of the DOM tree output. If it is, only the IP address of the incident
 * gets added to it. Determining if an incident is identical is solely done
 * based on the <identification> element of the <incident>.
 *
 * The XML structure is documented in airt.xsd, which can be found in the
 * source/doc directory.
 */
function BuildTree(&$doc, $res_array) {
   $airt = $doc->appendChild($doc->createElementNS(AIRTURL, AIRTPREFIX));

   $context    = new DOMXpath($doc);
   $context->registerNamespace(AIRTPREFIX, AIRTURL);
   $res  = $context->evaluate('//airt:airt/airt:incident');

   #messageIdentification
   $ident = $airt->appendChild($doc->createElementNS(AIRTURL, 'messageIdentification'));
   $ident->appendChild($doc->createElementNS(AIRTURL, 'message_time', time()));
   $sender = $ident->appendChild($doc->createElementNS(AIRTURL, 'sender_details'));
   if (!empty($res_array['messageIdentification']['webservice_location'])) {
      $sender->appendChild($doc->createElementNS(AIRTURL, 'webservice_location', $res_array['messageIdentification']['webservice_location']));
   }
   if (!empty($res_array['messageIdentification']['sender_name'])) {
      $sender->appendChild($doc->createElementNS(AIRTURL, 'sender_name', $res_array['messageIdentification']['sender_name']));
   }

   if (!empty($res_array['messageIdentification']['constituency'])) {
      $sender->appendChild($doc->createElementNS(AIRTURL, 'constituency', $res_array['messageIdentification']['constituency']));
   }

   if (!empty($res_array['messageIdentification']['email'])) {
      $sender->appendChild($doc->createElementNS(AIRTURL, 'email', $res_array['messageIdentification']['email']));
   }

   if (!empty($res_array['messageIdentification']['telephone'])) {
      $sender->appendChild($doc->createElementNS(AIRTURL, 'telephone', $res_array['messageIdentification']['telephone']));
   }

   if (!empty($res_array['messageIdentification']['version'])) {
      $version = $sender->appendChild($doc->createElementNS(AIRTURL, 'version',$res_array['messageIdentification']['version']));
   }

   #incidents
   foreach($res_array as $key => $value) {
      if($key!='messageIdentification') {
         $incident = $airt->appendChild($doc->createElementNS(AIRTURL, 'incident'));
         $ticket = $incident->appendChild($doc->createElementNS(AIRTURL, 'ticketInformation'));
         $techinfo = $incident->appendChild($doc->createElementNS(AIRTURL, 'technicalInformation'));

         #TicketInformation_element
         $ticketno = $ticket->appendChild($doc->createElementNS(AIRTURL, 'ticket_number'));
         $ticketno->appendChild($doc->createElementNS(AIRTURL, 'prefix', INCIDENTID_PREFIX));
         $ref = $ticketno->appendChild($doc->createElementNS(AIRTURL, 'reference'));
         if (isset($key)) {
            $ref->appendChild($doc->createTextNode($key));
         }

         $history = $ticket->appendChild($doc->createElementNS(AIRTURL, 'history'));
         foreach($res_array[$key]['ticketInformation']['history'] as $key2 => $value2) {
            $histitem = $history->appendChild($doc->createElementNS(AIRTURL, 'history_item'));

            $histid = $histitem->appendChild($doc->createElementNS(AIRTURL, 'history_id'));
            if (!empty($key2)) {
               $histid->appendChild($doc->createTextNode($key2));
            }

            if (!empty($res_array[$key]['ticketInformation']['history'][$key2]['ticket_updater'])) {
               $histitem->appendChild($doc->createElementNS(AIRTURL, 'ticket_updater',$res_array[$key]['ticketInformation']['history'][$key2]['ticket_updater']));
            }

            if (!empty($res_array[$key]['ticketInformation']['history'][$key2]['ticket_update_time'])) {
               $histitem->appendChild($doc->createElementNS(AIRTURL, 'ticket_update_time', $res_array[$key]['ticketInformation']['history'][$key2]['ticket_update_time']));
            }

            if (isset($res_array[$key]['ticketInformation']['history'][$key2]['update_action'])) {
               $histitem->appendChild($doc->createElementNS(AIRTURL, 'update_action', $res_array[$key]['ticketInformation']['history'][$key2]['update_action']));
            }
         } // history


         if (!empty($res_array[$key]['ticketInformation']['creator'])) {
            $ticket->appendChild($doc->createElementNS(AIRTURL, 'creator', $res_array[$key]['ticketInformation']['creator']));
         }

         if (!empty($res_array[$key]['ticketInformation']['created'])) {
            $ticket->appendChild($doc->createElementNS(AIRTURL, 'created',$res_array[$key]['ticketInformation']['created']));
         }

         if (!empty($res_array[$key]['ticketInformation']['status'])) {
            $ticket->appendChild($doc->createElementNS(AIRTURL, 'incident_status', $res_array[$key]['ticketInformation']['status']));
         }

         if (!empty($res_array[$key]['ticketInformation']['state'])) {
            $ticket->appendChild($doc->createElementNS(AIRTURL, 'incident_state', $res_array[$key]['ticketInformation']['state']));
         }

         if (!empty($res_array[$key]['ticketInformation']['type'])) {
            $ticket->appendChild($doc->createElementNS(AIRTURL, 'incident_type', $res_array[$key]['ticketInformation']['type']));
         }

         if (!empty($res_array[$key]['ticketInformation']['comment'])) {
            $ticket->appendChild($doc->createElementNS(AIRTURL, 'comment', $res_array[$key]['ticketInformation']['comment']));
         }

         #technicalInformation_element XXX
         foreach($res_array[$key]['technicalInformation'] as $key2 => $value2) {
            $techitem = $techinfo->appendChild($doc->createElementNS(AIRTURL, 'technical_item'));

            if (isset($key2)) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'technical_id', $key2));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['constituency'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'constituency', $res_array[$key]['technicalInformation'][$key2]['constituency']));
            }


            if (isset($res_array[$key]['technicalInformation'][$key2]['ip'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'ip', $res_array[$key]['technicalInformation'][$key2]['ip']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['port'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'port', $res_array[$key]['technicalInformation'][$key2]['port']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['hostname'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'hostname', $res_array[$key]['technicalInformation'][$key2]['hostname']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['addressrole'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'addressrole', $res_array[$key]['technicalInformation'][$key2]['addressrole']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['mac_address'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'mac_address', $res_array[$key]['technicalInformation'][$key2]['mac_address']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['number_attempts'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'number_attempts', $res_array[$key]['technicalInformation'][$key2]['number_attempts']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['protocol'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'protocol', $res_array[$key]['technicalInformation'][$key2]['protocol']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['incident_time'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'incident_time', $res_array[$key]['technicalInformation'][$key2]['incident_time']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['time_dns_resolving'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'time_dns_resolving', $res_array[$key]['technicalInformation'][$key2]['time_dns_resolving']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['logging'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'logging', $res_array[$key]['technicalInformation'][$key2]['logging']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['added'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'added', $res_array[$key]['technicalInformation'][$key2]['added']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['addedby'])) {
               $techitem->appendChild($doc->createElementNS(AIRTURL, 'addedby', $res_array[$key]['technicalInformation'][$key2]['addedby']));
            }

            $owner = $techitem->appendChild($doc->createElementNS(AIRTURL, 'owner'));

            if (isset($res_array[$key]['technicalInformation'][$key2]['employee_number'])) {
               $owner->appendChild($doc->createElementNS(AIRTURL, 'employee_number', $res_array[$key]['technicalInformation'][$key2]['employee_number']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['email_address'])) {
               $owner->appendChild($doc->createElementNS(AIRTURL, 'email_address', $res_array[$key]['technicalInformation'][$key2]['email_address']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['name'])) {
               $owner->appendChild($doc->createElementNS(AIRTURL, 'name', $res_array[$key]['technicalInformation'][$key2]['name']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['region'])) {
               $owner->appendChild($doc->createElementNS(AIRTURL, 'region', $res_array[$key]['technicalInformation'][$key2]['region']));
            }

            if (isset($res_array[$key]['technicalInformation'][$key2]['role'])) {
               $owner->appendChild($doc->createElementNS(AIRTURL, 'role', $res_array[$key]['technicalInformation'][$key2]['role']));
            }
         } // technicalinformation
      }  // !messageIdentification
   } // Incidents
} // function BuildTree
?>
